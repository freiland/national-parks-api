name: National Park API

paths:
  /parks:
    post:
      tags:
        -'national parks'
      summary: "Add a new park to the API"
      description: ""
      operationId: "addPark"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        state: "body"
        description: "Park object needs to be added to the API"
        required: true
        schema:
          $ref: "#parks"
      responses:
        "405":
          description: "Invalid input"
      security:
      - national_parks_auth:
        - "write:parks"
        - "read:parks"
    put:
      tags:
      - "parks"
      summary: "Update an existing park"
      description: ""
      operationId: "updatePark"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        state: "body"
        description: "Park object updated"
        required: true
        schema:
          $ref: "#/parks"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Park not found"
        "405":
          description: "Validation exception"
      security:
      - national_parks_auth:
        - "write:parks"
        - "read:parks"
    /parks/{parkId}:
    get:
      tags:
      - "park"
      summary: "Find national park by ID"
      description: "Returns a single park"
      operationId: "getParkById"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "parkId"
        in: "path"
        description: "ID of park to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Park"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Park not found"
      security:
      - api_key: []
    delete:
      tags:
      - "park"
      summary: "Deletes a park"
      description: ""
      operationId: "deletePark"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "api_key"
        in: "header"
        required: false
        type: "string"
      - name: "parkId"
        in: "path"
        description: "Park id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Park not found"
      security:
      - petstore_auth:
        - "write:parks"
        - "read:parks"
      